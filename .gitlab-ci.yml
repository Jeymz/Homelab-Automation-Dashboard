image: node:lts

stages:
  - security
  - test

security:iac:
  stage: security
  allow_failure: false
  image:
    name: bridgecrew/checkov:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  rules:
    - if: $SAST_DISABLED
      when: never
    - if: $CI_COMMIT_BRANCH
      exists:
        - '**/*.yml'
        - '**/*.yaml'
        - '**/*.json'
        - '**/*.template'
        - '**/*.tf'      
        - '**/serverless.yml'
        - '**/serverless.yaml'
  script:
    - checkov -d . -o junitxml | tee iac.scan.xml
  artifacts:
    reports:
      junit: "iac.scan.xml"
    paths:
      - "iac.scan.xml"

security:sca:
  stage: security
  image:
    name: debricked/cli
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: always
      allow_failure: true
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: always
      allow_failure: false
    - when: never
  script:
    - ls -a -l
    - 'debricked scan -b $CI_COMMIT_BRANCH -i gitlab -u $CI_PROJECT_URL -r "$CI_PROJECT_TITLE" -c $CI_COMMIT_SHA -a "$CI_COMMIT_AUTHOR" -t $DEBRICKED_TOKEN'

security:dtrack:
  stage: security
  image: node:lts
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
    - when: never
  allow_failure: false
  before_script:
    - |
      echo "-----BEGIN CERTIFICATE-----
      MIIF+jCCA+KgAwIBAgIEAQAAADANBgkqhkiG9w0BAQsFADCBoDEfMB0GCSqGSIb3
      DQEJAQwQYWRtaW5Acm9ib3R0aS5pbzEjMCEGA1UECgwaUm9ib3R0aSBUZWNoIFNl
      cnZpY2VzIExMQy4xEjAQBgNVBAcMCUZhaXJmaWVsZDENMAsGA1UECAwET2hpbzEL
      MAkGA1UEBgwCVVMxKDAmBgNVBAMTH1JvYm90dGkgVGVjaCBTZXJ2aWNlcyAtIFJv
      b3QgQ0EwHhcNMjMwNTE5MTYxNTQxWhcNMjcwNTE5MTYxNTQxWjCBoDEfMB0GCSqG
      SIb3DQEJAQwQYWRtaW5Acm9ib3R0aS5pbzEjMCEGA1UECgwaUm9ib3R0aSBUZWNo
      IFNlcnZpY2VzIExMQy4xEjAQBgNVBAcMCUZhaXJmaWVsZDENMAsGA1UECAwET2hp
      bzELMAkGA1UEBgwCVVMxKDAmBgNVBAMTH1JvYm90dGkgVGVjaCBTZXJ2aWNlcyAt
      IFJvb3QgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDGNsIJM23n
      vYF0LzOh6N8miPZDaRhJ8P05SAJyhA75VnSczZaNQXN4wz8Txz6Kg4hbjGPO7fOZ
      9UuUsVynN2L6+Q+P622iJudC1yyPKWV7Qr7b5z79aogkCPj2d6evKtSiQXGkWFTt
      h2too9zBtAUCasu13PNRD4GlRSrtrpq9FxLDHrhNpXItMLhpTUWq2nFn3ckj/x7u
      7sJ7NFF1eTCPS91bnK8olQSt74SR93UOhiGd2e3nP3ofRhrnTFBxyLg6q/Tr8wz8
      c86pwxH6ctqBDELD7lR597Hon9r6AtXkOyo4kj0EbXjZdTNaEiODYRjnz79HARSW
      MLNCmA9IfAcRxE6mW8i1DOSacuOtCW54/9VRCmiJZaN7pCGtC8iN75KlZHvgUuWU
      iw9e80AyODnBZRZxo/wU0vw2RnaiwfrU8Mu74ZFuiJOPvpHp7xj3n5ZMiJBdRFQ2
      ZVDGzMbC8/OWySUfNMXwPfjclD3UMCD4+XQFbbPkN+imSxR2bi69JaE1THc++Zpt
      txAzEuizn6AdBXPaWflGrqpSfz59uUSH1tyjss2q2x1FLkoVM2238aEKcUtZ7kOa
      eYGQMoRR/DEGbweQCQODcDjuwdLM+yZz8tCp5C1MxYE81ZmrhlRE4fs7gxZaSeg2
      Ic5aatktoIV4q/th8fyqheySoKhIAIW/4wIDAQABozowODAMBgNVHRMEBTADAQH/
      MB0GA1UdDgQWBBSIN9xsyPIGhnBD4ZN2CBol61/GijAJBgNVHSMEAjAAMA0GCSqG
      SIb3DQEBCwUAA4ICAQBs2rZrhv5chozibcRGWicRDIEUQshrJ9FX1cgKjwFeevWp
      PuGpUxOHRDvTo7o8vhjg8X36mLZ0HVeC90FwqFtLSZ1Trv6lCSau9tliTSbwWjKT
      Plpur2gdhZxlfbuLw1ti+WLw/2E/MvJlz07/MLqk+OASJaaADezkTNV/kV3aQ2Ak
      tGqoyA3RBe97/I6KTC7OZWIjUNob+YxwWDiM+nzMsg3QO/6/BQV8hOk0UgGc3BVk
      dkB2kXIk6x2//tPgQhRhi8Vga7oeyj7KBF+TJjPrwGour6xWo4RRjmkQLmpdjipH
      3Q7JLB/A6m6suP8Wll/y6arX/ShH7NuE3IEZwCr7JFtzgHyolBEe9btMebAKKXca
      DUamZ7Xv6PPfyL7f7rKy7P5E+pcz4tnmuFtnWSYbXI6s5c2Y1YhhTmYEbrZDYVV3
      2znd7tj7LAPHtgGteJ3FjiOt6AiKTajtV8mMTc2D2HqF0PvruWQJgKm5H5KlR7pi
      3c1xvmWe0rwdySW1ziD8MLdD2BybUyEEb2H9rUnn1/4SKwlUmpeW2ysYBopRdnbY
      ZzqWm7PI9JgsNuYAunkx/wN8IwYWrcm3lmdywJP8Zk6eEFv/TbD70RdZZvgQjAGu
      0IQ5Y+SnPySfg0oGBAFGXw2NxhJwwTbPCZHsiyuKXOMmCJE33xPwiFgEA09v5g==
      -----END CERTIFICATE-----" > /usr/local/share/ca-certificates/robotti.private.crt
    - update-ca-certificates
  script:
    - npm i -g @cyclonedx/cyclonedx-npm
    - npm install --omit=dev
    - cyclonedx-npm --omit dev > sbom.json
    - echo ${dtrack_api_key}
    - |
      curl --header "X-Api-Key: ${dtrack_api_key}" -X POST --location "https://dependencies.robotti.private/api/v1/bom" \
      --form "bom=@./sbom.json" \
      --form "autoCreate=true" \
      --form "projectName=${CI_PROJECT_NAME}" \
      --form "projectVersion=${CI_COMMIT_BRANCH}"
  artifacts:
    paths:
      - sbom.json
    when: on_success

security:secrets:
  stage: security
  allow_failure: false
  image: gitguardian/ggshield:latest
  script: ggshield secret scan ci



##############
# Test Steps #
##############

test:lint:
  stage: test
  image: node:lts
  script:
    - npm install
    - npm run lint
  allow_failure: true

sast:
  stage: test

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml